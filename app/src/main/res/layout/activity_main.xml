<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/coordinatorLayout"
    tools:context="com.example.kavitha.snackbar_jun04.MainActivity">

    <android.support.design.widget.AppBarLayout
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|enterAlways"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
    </android.support.design.widget.AppBarLayout>


    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:fillViewport="true"
        >


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="5dp"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
      >


        <TextView

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Snackbars are just like Toast messages except they provide action to interact with. Snackbar will be displayed at the bottom of the screen and can be swiped off in order to dismiss them."
            />

        <Button
            android:layout_margin="10dp"
            android:textColor="@android:color/white"
            android:background="@color/colorAccent"
            android:id="@+id/buttonSimpleSnackBar"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:padding="10dp"
            android:text="Simple Snackbar"
             />



        <TextView

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="The make function accepts three parameters. View, display message and duration of the message to be displayed. \n
Normally passing CoordinatorLayout as view param is the best option as it allows Snackbar to enable some features like swipe-to-dismiss and automatically moving of widgets like FloatingActionButton. \n
duration should be LENGTH_SHORT, LENGTH_LONG or LENGTH_INDEFINITE. When LENGTH_INDEFINITE is used, the snackbar will be displayed indefinite time and can be dismissed with swipe off."
            />

        <Button
            android:padding="10dp"
            android:layout_margin="10dp"
            android:textColor="@android:color/white"
            android:background="@color/colorAccent"
            android:id="@+id/buttonWithActionCallback"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="With Action Callback"
           />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text=" mention a callback interaction method using setAction() method. This allows us to take certain action when user interacts with the snackbar."/>
        <Button
            android:padding="10dp"
            android:layout_margin="10dp"
            android:textColor="@android:color/white"
            android:background="@color/colorAccent"
            android:id="@+id/buttonCustomColor"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Custom Colors"
            />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Snackbar comes with default white color text and #323232 background color. You can override these colors \n
               setActionTextColor() : Change Action Button Color \n
                setTextColor() : Change Message Color"/>
    </LinearLayout>
    </ScrollView>

    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="end|bottom"
        android:layout_margin="16dp"
        android:src="@android:drawable/ic_dialog_email">

    </android.support.design.widget.FloatingActionButton>

</android.support.design.widget.CoordinatorLayout>
